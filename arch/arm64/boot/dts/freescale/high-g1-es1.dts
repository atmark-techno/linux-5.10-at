// SPDX-License-Identifier: (GPL-2.0 OR MIT)
/*
 * Copyright (C) 2024 Atmark Techno, Inc. All Rights Reserved.
 */

/dts-v1/;

#include <dt-bindings/usb/pd.h>
#include <dt-bindings/net/micrel-ksz9131.h>
#include "imx8mp.dtsi"

/ {
	model = "Atmark-Techno high-g1-es1 Board";
	compatible = "atmark,high-g1-es1", "fsl,imx8mp";

	chosen {
		stdout-path = &uart2;
	};

	aliases {
		rtc0 = &rv8803_rtc;
		rtc1 = &snvs_rtc;
	};

	reg_usdhc2_vmmc: regulator-usdhc2 {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_usdhc2_vmmc>;
		regulator-name = "VSD_3V3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		// ??? voltage-ranges = <1800 1800 3300 3300>;
		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-always-on;
		off-on-delay-us = <100000>;
	};

	reg_enet_ldo_en: regulator-enet-ldo-en {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_enet_ldo_en>;
		regulator-name = "ENET_LDO_EN";
		/* One GPIO controls three regulators(1.2V, 1.8V, 2.5V) */
		regulator-min-microvolt = <2500000>;
		regulator-max-microvolt = <2500000>;
		gpio = <&gpio4 18 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-always-on;
	};

	reg_can1_stby: regulator-can1-stby {
		compatible = "regulator-fixed";
		regulator-name = "can1-stby";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pca9538 5 GPIO_ACTIVE_LOW>;
	};

	reg_can2_stby: regulator-can2-stby {
		compatible = "regulator-fixed";
		regulator-name = "can2-stby";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&pca9538 6 GPIO_ACTIVE_LOW>;
	};

	reg_can_5v: regulator-can-5v {
		compatible = "regulator-fixed";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_reg_can_5v>;
		regulator-name = "can-5v";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		gpio = <&gpio3 19 GPIO_ACTIVE_HIGH>;
		enable-active-high;
		regulator-always-on;
	};

	reg_1p8v: regulator-1p8v {
		compatible = "regulator-fixed";
		regulator-name = "1P8V";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		regulator-always-on;
	};

	reg_2p8v: regulator-2p8v {
		compatible = "regulator-fixed";
		regulator-name = "2P8V";
		regulator-min-microvolt = <2800000>;
		regulator-max-microvolt = <2800000>;
		regulator-always-on;
	};

	reg_vcc_5v0: regulator-5v0 {
		compatible = "regulator-fixed";
		regulator-name = "VCC_5V0";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

	sound-hdmi {
		compatible = "fsl,imx-audio-cdnhdmi";
		model = "audio-hdmi";
		audio-cpu = <&aud2htx>;
		hdmi-out;
		constraint-rate = <44100>,
				<88200>,
				<176400>,
				<32000>,
				<48000>,
				<96000>,
				<192000>;
		status = "okay";
	};

	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys>;

		gpio_keys_sw1: sw1 {
			label = "SW1";
			gpios = <&gpio1 13 GPIO_ACTIVE_LOW>;
			linux,code = <KEY_PROG1>;
		};
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_leds>;

		led1 {
			label = "led1";
			gpios = <&gpio1 14 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

		net_led1 {
			label = "net_led1";
			gpios = <&gpio4 27 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		net_led2 {
			label = "net_led2";
			gpios = <&gpio4 29 GPIO_ACTIVE_HIGH>;
			default-state = "off";
		};

		enet_led3 {
			label = "enet_led3";
			gpios = <&gpio4 0 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "stmmac-1:03:1Gbps";
		};
	};

	resmem: reserved-memory {
		linux,cma {
			size = <0 0x40000000>;
			alloc-ranges = <0 0x40000000 0 0xbfffffff>;
		};
	};

	moal-params {
		host_mlme = <0x1>;
		// disable power savings
		ps_mode = <0x2>;
		auto_ds = <0x2>;
		// disable wifi direct, untested
		drv_mode = <0x3>;
		// disable mac-1 to fit power budget
		mac-1 {
			drv_mode = <0x0>;
		};

	};

	se_en: se-enable {
		compatible = "gpio-reset";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_se_enable>;
		reset-gpios = <&gpio1 12 GPIO_ACTIVE_LOW>;
		reset-assert-in-suspend;
	};
};

&aud2htx {
	status = "okay";
};

&irqsteer_hdmi {
	status = "okay";
};

&hdmi_blk_ctrl {
	status = "okay";
};

&hdmi_pavi {
	status = "okay";
};

&hdmi {
	status = "okay";
};

&hdmiphy {
	status = "okay";
};

&lcdif3 {
	status = "okay";

	thres-low  = <1 2>;		/* (FIFO * 1 / 2) */
	thres-high = <3 4>;		/* (FIFO * 3 / 4) */
};

&eqos {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&pinctrl_eqos>;
	pinctrl-1 = <&pinctrl_eqos_sleep>;
	phy-mode = "rgmii-id";
	phy-handle = <&eqosphy>;
	snps,reset-gpio = <&gpio4 22 GPIO_ACTIVE_LOW>;
	snps,reset-active-low;
	snps,reset-delays-us = <0 15000 150000>; // hold reset 15ms and wait 150ms after reset for reinit
	st,disable_dma_vlhash = <1>;
	status = "okay";

	mdio {
		compatible = "snps,dwmac-mdio";
		#address-cells = <1>;
		#size-cells = <0>;
		eqosphy: eqos-phy@0 {
			compatible = "ethernet-phy-ieee802.3-c22";
			eee-broken-1000t;
			eee-broken-100tx;
			reg = <0>;

			/* marvell,reg-init = <reg-page reg mask value>; */
			marvell,reg-init =
				<3 16 0xff00 0x73>,
				<3 17 0xfff0 0xa>,
				<18 20 0xfff8 0x0>;
		};
	};
};

&flexcan1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan1>;
	xceiver-supply = <&reg_can1_stby>;
	status = "okay";
};

&flexcan2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_flexcan2>;
	xceiver-supply = <&reg_can2_stby>;
	status = "okay";
};

&i2c1 {
	clock-frequency = <384000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";

	pmic: pca9450@25 {
		reg = <0x25>;
		compatible = "nxp,pca9450c";
		/* PMIC PCA9450 PMIC_nINT GPIO1_IO3 */
		pinctrl-0 = <&pinctrl_pmic>;
		interrupt-parent = <&gpio1>;
		interrupts = <3 GPIO_ACTIVE_LOW>;

		regulators {
			buck1: BUCK1 {
				regulator-name = "BUCK1";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
			};

			buck2: BUCK2 {
				regulator-name = "BUCK2";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <2187500>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <3125>;
				nxp,dvs-run-voltage = <950000>;
				nxp,dvs-standby-voltage = <850000>;
			};

			buck4: BUCK4 {
				regulator-name = "BUCK4";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck5: BUCK5 {
				regulator-name = "BUCK5";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			buck6: BUCK6 {
				regulator-name = "BUCK6";
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <3400000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo1: LDO1 {
				regulator-name = "LDO1";
				regulator-min-microvolt = <1600000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo2: LDO2 {
				regulator-name = "LDO2";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1150000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo3: LDO3 {
				regulator-name = "LDO3";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo4: LDO4 {
				regulator-name = "LDO4";
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};

			ldo5: LDO5 {
				regulator-name = "LDO5";
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
			};
		};
	};
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	rv8803_rtc: rtc@32 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_rtc_gpio>;

		compatible = "microcrystal,rv8803";
		reg = <0x32>;
		interrupt-parent = <&gpio1>;
		interrupts = <11 GPIO_ACTIVE_LOW>;
		wakeup-source;
	};
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";

	gpio_expander: gpio@43 {
		gpio-controller;
		#gpio-cells = <2>;
		compatible = "fcs,fxl6408";
		reg = <0x43>;
	};
};

&i2c4 {
	clock-frequency = <384000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c4>;
	status = "okay";

	pca9538: gpio@70 {
		compatible = "nxp,pcal9554b";
		reg = <0x70>;
		gpio-controller;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_pca9538>;
		interrupt-parent = <&gpio4>;
		interrupts = <31 IRQ_TYPE_EDGE_FALLING>;
		#gpio-cells = <2>;
		wakeup-source;
	};

	ads1015_0: adc@48 {
		compatible = "ti,ads1015";
		reg = <0x48>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ads1015_0>;
		interrupts-extended = <&gpio3 21 IRQ_TYPE_LEVEL_LOW>;
		#address-cells = <1>;
		#size-cells = <0>;

		channel@4 {
			reg = <4>;
			ti,gain = <0>; /* +/- 6.144 V */
			ti,datarate = <6>; /* 3300 SPS */
		};
	};

	ads1015_1: adc@49 {
		compatible = "ti,ads1015";
		reg = <0x49>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_ads1015_1>;
		interrupts-extended = <&gpio4 30 IRQ_TYPE_LEVEL_LOW>;
		#address-cells = <1>;
		#size-cells = <0>;

		channel@4 {
			reg = <4>;
			ti,gain = <0>;
			ti,datarate = <6>;
		};
	};
};

&sdma2 {
	status = "okay";
};

&usb3_phy0 {
	fsl,phy-tx-preemp-amp-tune = <0x3>;

	status = "okay";
};

&usb3_0 {
	status = "okay";
};

&usb_dwc3_0 {
	dr_mode = "host";
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbhub0>;
	status = "okay";

	hub_3_0: hub@1 {
		compatible = "usb451,8140";
		reg = <1>;
		reset-gpios = <&gpio1 9 GPIO_ACTIVE_LOW>;
		vdd-supply = <&reg_vcc_5v0>;
	};
};

&usb3_phy1 {
	status = "okay";
};

&usb3_1 {
	status = "okay";
};

&usb_dwc3_1 {
	dr_mode = "host";
	#address-cells = <1>;
	#size-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbhub1>;
	status = "okay";

	hub_3_1: hub@2 {
		compatible = "usb451,8140";
		reg = <2>;
		reset-gpios = <&gpio1 10 GPIO_ACTIVE_LOW>;
		vdd-supply = <&reg_vcc_5v0>;
	};
};

&usdhc2 {
	assigned-clocks = <&clk IMX8MP_CLK_USDHC2>;
	assigned-clock-rates = <400000000>;
	pinctrl-names = "default", "state_100mhz", "state_200mhz", "sleep";
	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
	pinctrl-3 = <&pinctrl_usdhc2_sleep>, <&pinctrl_usdhc2_gpio>;
	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
	vmmc-supply = <&reg_usdhc2_vmmc>;
	bus-width = <4>;
	/* SDR50/104 is not supported in order to comply with the VCCI
	 * Class B Compliance (RF leakage at 1GHz when used in some case)
	 */
	sdhci-caps-mask = <0x3 0x0>;
	status = "okay";
};

&usdhc3 {
	assigned-clocks = <&clk IMX8MP_CLK_USDHC3>;
	assigned-clock-rates = <400000000>;
	pinctrl-names = "default", "state_100mhz", "state_200mhz", "sleep";
	pinctrl-0 = <&pinctrl_usdhc3>;
	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
	pinctrl-3 = <&pinctrl_usdhc3_sleep>;
	bus-width = <8>;
	non-removable;
	status = "okay";
};

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&wdog1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,ext-reset-output;
	status = "okay";
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <
		&pinctrl_hog
		&pinctrl_expansion_interfacehog
		&pinctrl_customize
	>;

	pinctrl_hog: hoggrp {
		fsl,pins = <
			MX8MP_IOMUXC_HDMI_DDC_SCL__HDMIMIX_HDMI_SCL	0x40000034
			MX8MP_IOMUXC_HDMI_DDC_SDA__HDMIMIX_HDMI_SDA	0x40000034
			MX8MP_IOMUXC_HDMI_HPD__HDMIMIX_HDMI_HPD		0x40000034
			MX8MP_IOMUXC_HDMI_CEC__HDMIMIX_HDMI_CEC		0x40000034
		>;
	};

	pinctrl_expansion_interfacehog: expansion_interfacehoggrp {
		/* this group left empty for at-dtweb expansion GPIOs */
	};

	pinctrl_customize: customizegrp {
		/* empty group defined for easier customizing: override this for your pin configurations */
	};

	/* Memo for pinctrl config:
	 * 0x2/6 = stronger driving field
	 *  0x10 = fast slew rate
	 *  0x20 = open drain enable
	 *  0x40 = pull up
	 *  0x80 = schmitt trigger input
	 * 0x100 = pull enable
	 * 0x40000000 = SION enable
	 *
	 * SION = able to get input value of gpio regardless its mux setting
	 */
	pinctrl_eqos: eqosgrp {
		fsl,pins = <
			MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC		0x2
			MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO		0x2
			MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0	0x6
			MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1	0x6
			MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2	0x6
			MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3	0x6
			MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK	0x106
			MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL	0x106
			MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0	0x142
			MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1	0x142
			MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2	0x142
			MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3	0x142
			MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL	0x142
			MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK	0x142
			MX8MP_IOMUXC_SAI2_RXC__GPIO4_IO22		0x152 // RST
			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00		0x152 // ENET_LED3
		>;
	};

	pinctrl_eqos_sleep: eqosslpgrp {
		fsl,pins = <
			MX8MP_IOMUXC_ENET_MDC__GPIO1_IO16	0x101
			MX8MP_IOMUXC_ENET_MDIO__GPIO1_IO17	0x41
			MX8MP_IOMUXC_ENET_RD0__GPIO1_IO26	0x101
			MX8MP_IOMUXC_ENET_RD1__GPIO1_IO27	0x101
			MX8MP_IOMUXC_ENET_RD2__GPIO1_IO28	0x101
			MX8MP_IOMUXC_ENET_RD3__GPIO1_IO29	0x101
			MX8MP_IOMUXC_ENET_RXC__GPIO1_IO25	0x101
			MX8MP_IOMUXC_ENET_RX_CTL__GPIO1_IO24	0x101
			MX8MP_IOMUXC_ENET_TD0__GPIO1_IO21	0x101
			MX8MP_IOMUXC_ENET_TD1__GPIO1_IO20	0x101
			MX8MP_IOMUXC_ENET_TD2__GPIO1_IO19	0x101
			MX8MP_IOMUXC_ENET_TD3__GPIO1_IO18	0x101
			MX8MP_IOMUXC_ENET_TX_CTL__GPIO1_IO22	0x101
			MX8MP_IOMUXC_ENET_TXC__GPIO1_IO23	0x101
			MX8MP_IOMUXC_SAI2_RXC__GPIO4_IO22	0x152 // RST
		>;
	};

	pinctrl_pca9538: pca9538grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI3_TXFS__GPIO4_IO31	0x140 /* EXPANDER_INT */
		>;
	};

	pinctrl_flexcan1: flexcan1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI5_RXD1__CAN1_TX		0x154 /* FLEXCAN1_TX */
			MX8MP_IOMUXC_SAI5_RXD2__CAN1_RX		0x154 /* FLEXCAN1_RX */
		>;
	};

	pinctrl_flexcan2: flexcan2grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI5_RXD3__CAN2_TX		0x154 /* FLEXCAN2_TX */
			MX8MP_IOMUXC_SAI5_MCLK__CAN2_RX		0x154 /* FLEXCAN2_RX */
		>;
	};

	pinctrl_i2c1: i2c1grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C1_SCL__I2C1_SCL		0x400000e2
			MX8MP_IOMUXC_I2C1_SDA__I2C1_SDA		0x400000e2
		>;
	};

	pinctrl_i2c2: i2c2grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C2_SCL__I2C2_SCL			0x400000e2
			MX8MP_IOMUXC_I2C2_SDA__I2C2_SDA			0x400000e2
		>;
	};

	pinctrl_i2c3: i2c3grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C3_SCL__I2C3_SCL			0x400000e2
			MX8MP_IOMUXC_I2C3_SDA__I2C3_SDA			0x400000e2
		>;
	};

	pinctrl_i2c4: i2c4grp {
		fsl,pins = <
			MX8MP_IOMUXC_I2C4_SCL__I2C4_SCL			0x400000e2
			MX8MP_IOMUXC_I2C4_SDA__I2C4_SDA			0x400000e2
		>;
	};

	pinctrl_gpio_keys: gpio_keys {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO13__GPIO1_IO13	0x400001c0 /* SW1 */
		>;
	};

	pinctrl_gpio_leds: gpio_leds {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO14__GPIO1_IO14	0x152 /* led1 */
			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27	0x152 /* NET_LED1 */
			MX8MP_IOMUXC_SAI3_RXC__GPIO4_IO29	0x152 /* NET_LED2 */
		>;
	};

	pinctrl_pmic: pmicirq {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO03__GPIO1_IO03	0x141
		>;
	};

	pinctrl_rtc_gpio: rtc_gpio {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO11__GPIO1_IO11	0x40000140
		>;
	};

	pinctrl_reg_usdhc2_vmmc: regusdhc2vmmcgrp {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_RESET_B__GPIO2_IO19	0x41
		>;
	};

	pinctrl_usbhub0: usbhub0grp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO09__GPIO1_IO09	0x1c4 /* USB1_HUB_RST */
		>;
	};

	pinctrl_usbhub1: usbhub1grp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10	0x1c4 /* USB2_HUB_RST */
		>;
	};

	pinctrl_usdhc2_gpio: usdhc2grp-gpio {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CD_B__GPIO2_IO12	0x1c4
		>;
	};

	pinctrl_usdhc2: usdhc2grp {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x190
			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d0
			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d0
			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d0
			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d0
			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d0
			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT	0xc1
		>;
	};

	pinctrl_usdhc2_100mhz: usdhc2grp-100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x190
			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d0
			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d0
			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d0
			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d0
			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d0
			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 0xc1
		>;
	};

	pinctrl_usdhc2_200mhz: usdhc2grp-200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x196
			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d4
			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d4
			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d4
			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d4
			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d4
			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 0xc1
		>;
	};

	pinctrl_usdhc2_sleep: usdhc2grp-sleep {
		fsl,pins = <
			MX8MP_IOMUXC_SD2_CLK__GPIO2_IO13	0x41
			MX8MP_IOMUXC_SD2_CMD__GPIO2_IO14	0x41
			MX8MP_IOMUXC_SD2_DATA0__GPIO2_IO15	0x41
			MX8MP_IOMUXC_SD2_DATA1__GPIO2_IO16	0x41
			MX8MP_IOMUXC_SD2_DATA2__GPIO2_IO17	0x41
			MX8MP_IOMUXC_SD2_DATA3__GPIO2_IO18	0x41
			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 0xc1
		>;
	};

	pinctrl_usdhc3: usdhc3grp {
		fsl,pins = <
			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK		0x190
			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD		0x1d0
			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0		0x1d0
			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1		0x1d0
			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2		0x1d0
			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3		0x1d0
			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4		0x1d0
			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5		0x1d0
			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6		0x1d0
			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7		0x1d0
			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE		0x190
			MX8MP_IOMUXC_NAND_READY_B__USDHC3_RESET_B	0x190
		>;
	};

	pinctrl_usdhc3_100mhz: usdhc3grp-100mhz {
		fsl,pins = <
			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK		0x194
			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD		0x1d4
			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0		0x1d4
			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1		0x1d4
			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2		0x1d4
			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3		0x1d4
			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4		0x1d4
			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5		0x1d4
			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6		0x1d4
			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7		0x1d4
			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE		0x194
			MX8MP_IOMUXC_NAND_READY_B__USDHC3_RESET_B	0x194
		>;
	};

	pinctrl_usdhc3_200mhz: usdhc3grp-200mhz {
		fsl,pins = <
			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK		0x194
			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD		0x1d4
			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0		0x1d4
			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1		0x1d4
			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2		0x1d4
			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3		0x1d4
			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4		0x1d4
			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5		0x1d4
			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6		0x1d4
			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7		0x1d4
			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE		0x194
			MX8MP_IOMUXC_NAND_READY_B__USDHC3_RESET_B	0x194

		>;
	};

	pinctrl_usdhc3_sleep: usdhc3grp-sleep {
		fsl,pins = <
			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK		0x41
			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD		0x41
			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0		0x41
			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1		0x41
			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2		0x41
			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3		0x41
			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4		0x41
			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5		0x41
			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6		0x41
			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7		0x41
			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE		0x41
			MX8MP_IOMUXC_NAND_READY_B__USDHC3_RESET_B	0x191

		>;
	};

	pinctrl_uart2: uart2grp {
		fsl,pins = <
			MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x49
			MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x49
		>;
	};

	pinctrl_reg_can_5v: reg-can-5vgrp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI5_RXFS__GPIO3_IO19	0x140 /* CAN_POWER_EN */
		>;
	};

	pinctrl_reg_enet_ldo_en: reg-enet-ldo-engrp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI1_TXD6__GPIO4_IO18	0x41
		>;
	};

	pinctrl_wdog: wdoggrp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO02__WDOG1_WDOG_B	0xc6
		>;
	};

	pinctrl_se_enable: seenablegrp {
		fsl,pins = <
			MX8MP_IOMUXC_GPIO1_IO12__GPIO1_IO12		0x0
		>;
	};

	pinctrl_ads1015_0: ads1015_0grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI5_RXD0__GPIO3_IO21	0x140 /* ADC_INT1 */
		>;
	};

	pinctrl_ads1015_1: ads1015_1grp {
		fsl,pins = <
			MX8MP_IOMUXC_SAI3_RXD__GPIO4_IO30	0x140 /* ADC_INT2 */
		>;
	};
};

&vpu_g1 {
	status = "okay";
};

&vpu_g2 {
	status = "okay";
};

&vpu_vc8000e {
	status = "okay";
};

&vpu_v4l2 {
	status = "okay";
};

&gpu_3d {
	status = "okay";
};

&gpu_2d {
	status = "okay";
};

&ml_vipsi {
	status = "okay";
};

&mix_gpu_ml {
	status = "okay";
};

&A53_0 {
	cpu-supply = <&buck2>;
};

&A53_1 {
	cpu-supply = <&buck2>;
};

&A53_2 {
	cpu-supply = <&buck2>;
};

&A53_3 {
	cpu-supply = <&buck2>;
};

&cpu_alert0 {
	temperature = <105000>;
};

&cpu_crit0 {
	temperature = <105000>;
};

&soc_alert0 {
	temperature = <105000>;
};

&soc_crit0 {
	temperature = <105000>;
};
